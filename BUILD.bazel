load("@contrib_rules_jvm//docs:stardoc-input.bzl", "java_junit5_test")
load("@rules_graalvm//graalvm:defs.bzl", "native_image")
load("@rules_java//java:java_library.bzl", "java_library")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_binary", "kt_jvm_import", "kt_jvm_library")

java_proto_library(
    name = "worker_protocol_java_proto",
    deps = ["@bazel_worker_api//:worker_protocol_proto"],
)

kt_jvm_import(
    name = "protobuf-java",
    jar = "@protobuf-java-file//file",
)

kt_jvm_import(
    name = "protobuf-java-util",
    jar = "@protobuf-java-util-file//file",
)

kt_jvm_library(
    name = "worker",
    srcs = glob(["src/*.kt"]),
    deps = [
        "//:worker_protocol_java_proto",
        ":protobuf-java",
        ":protobuf-java-util",
    ],
)

native_image(
    name = "worker-native",
    deps = [":worker"],
    extra_args = [
        "-H:+UnlockExperimentalVMOptions",
        "-H:+CompactingOldGen",
        "-march=native",
        "-O3",
    ],
    main_class = "org.jetbrains.bazel.jvm.JpsBazelBuilder",
    native_image_tool = "@graalvm//:native-image",
)

kt_jvm_library(
    name = "worker_test_lib",
    srcs = ["testSrc/WorkRequestHandlerTest.kt"],
    associates = [":worker"],
    deps = [
        "//:worker_protocol_java_proto",
        "@junit_jupiter_api//jar",
        "@assertj//jar",
    ],
    runtime_deps = [
        "@junit_platform_commons//jar",
        "@opentest4j//jar",
        "@junit_jupiter_engine//jar",
        "@junit_platform_engine//jar",
        "@junit_platform_reporting//jar",
        "@junit_platform_launcher//jar",
    ],
)

java_junit5_test(
    name = "worker_test",
    test_class = "org.jetbrains.bazel.jvm.WorkRequestHandlerTest",
    runtime_deps = [":worker_test_lib"],
)
